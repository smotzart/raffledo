{"version":3,"file":"app.js","sources":["app.coffee"],"names":[],"mappings":"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","sourcesContent":["\r\n# Append to array, return array\r\nArray.prototype.append = (el) ->\r\n  this.push el if this.push?\r\n  this\r\n\r\nangular.module('app', [\r\n  'ngRoute', \r\n  'ngResource',\r\n  'ngAnimate',\r\n  'ngSanitize',\r\n  'checklist-model'\r\n])\r\n  .factory('APIGames', ['$resource', ($resource) -> $resource 'games/get/:value/:tag', {value: '@value', tag: '@tag'}])\r\n  .factory('APIControl', ['$resource', ($resource) -> $resource 'games/control', {}])\r\n\r\n  .run([\r\n    '$rootScope', '$route'\r\n  ].append (root, $route) ->\r\n\r\n  )\r\n\r\n  .controller('AppCtrl', ['$scope', 'APIGames', 'APIControl', '$window', '$timeout', (self, APIGames, APIControl, window, $timeout) ->\r\n\r\n    self.$watch 'initValue', () ->\r\n      self.getData(self.initValue, self.initName)\r\n\r\n    self.data = {}\r\n    self.modalTags = {}\r\n    self.tags_id = []\r\n    self.showTagSuccess = false\r\n\r\n    self.getData = (value, tag) ->\r\n      params = if value && tag then {value: value, tag: tag} else {}\r\n      APIGames.get params, (data) ->\r\n        self.data = data\r\n\r\n    self.toggleTagView = (id, tag) ->\r\n      control = new APIControl \r\n        actionType: 'toggleTagById'\r\n        tag_type: tag\r\n        tag_id: id\r\n      control.$save {}, () ->\r\n        if tag == self.initName\r\n          self.data.entry_hide = !self.data.entry_hide\r\n          unless self.data.entry_hide\r\n            self.showTagSuccess  = true\r\n            $timeout () ->\r\n              self.showTagSuccess = false\r\n            , 3000\r\n        else\r\n          console.log \"tt\"\r\n          self.getData()\r\n\r\n      , () ->\r\n        console.log 'not process'\r\n\r\n\r\n    self.toggleSave = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'save'\r\n      control.$save {}, () ->\r\n        game.save_id = true\r\n        unless self.initValue\r\n          position  = self.data.collections['regular'].games.indexOf(game)\r\n          item      = self.data.collections['regular'].games.splice(position, 1)      \r\n         \r\n          self.data.collections['favorite'].games.push(item[0])\r\n    \r\n    self.hideGame = (game, key) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hide'\r\n      control.$save {}, () ->\r\n        unless self.initValue\r\n          position  = self.data.collections[key].games.indexOf(game)\r\n          item      = self.data.collections[key].games.splice(position, 1)\r\n\r\n    self.showGame = (game) ->\r\n      if !game.is_view\r\n        game.is_view = true\r\n      window.open '/win/' + game.g.id\r\n\r\n    self.hideCompany = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideCompany'\r\n      control.$save {}, () ->        \r\n        unless self.initValue\r\n          APIGames.get {}, (data) ->\r\n            self.data = data\r\n\r\n    self.hideTag = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->        \r\n        unless self.initValue\r\n          APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n            self.data = data\r\n\r\n    self.openModal = (game) ->\r\n      self.modalTags = game.tags\r\n\r\n    self.sendModal = () ->\r\n      control = new APIControl\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->       \r\n        unless self.initValue\r\n          APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n            self.data = data\r\n  ])\r\n\r\n  .controller('TagCtrl', ['$scope', 'APIGames', 'APIControl', '$window', (self, APIGames, APIControl, window) ->\r\n    self.$watch 'tag_hide', () ->\r\n      console.log self.tag_hide\r\n  ])"]}