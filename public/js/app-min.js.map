{"version":3,"sources":["app.coffee"],"names":["Array","prototype","append","el","this","push","angular","module","factory","$resource","run","root","$route","console","log","controller","self","APIGames","APIControl","window","data","modalTags","tags_id","location","pathname","get","path","toggleSave","game","key","actionId","g","id","actionType","$save","item","position","collections","games","indexOf","splice","hideGame","showGame","is_view","open","hideCompany","hideTag","openModal","tags","sendModal"],"mappings":"AACAA,MAAMC,UAAUC,OAAS,SAASC,GAIhC,OAHiB,MAAbC,KAAKC,MACPD,KAAKC,KAAKF,GAELC,MAGTE,QAAQC,OAAO,MAAO,CAAC,UAAW,aAAc,oBAAoBC,QAAQ,WAAY,CACtF,YACA,SAASC,GACP,OAAOA,EAAU,gBAElBD,QAAQ,aAAc,CACvB,YACA,SAASC,GACP,OAAOA,EAAU,gBACnB,OAECC,IAAI,CAAC,aAAc,UAAUR,OAAO,SAASS,EAAMC,GACpD,OAAOC,QAAQC,IAAI,cACjBC,WAAW,UAAW,CACxB,SACA,WACA,aACA,UACA,SAASC,EACTC,EACAC,EACAC,GAoFE,OAnFAH,EAAKI,KAAO,GACZJ,EAAKK,UAAY,GACjBL,EAAKM,QAAU,GACfT,QAAQC,IAAIS,SAASC,UACrBP,EAASQ,IAAI,CACXC,KAAQP,EAAOI,SAASC,UAE5B,SAASJ,GACL,OAAOJ,EAAKI,KAAOA,IAErBJ,EAAKW,WAAa,SAASC,EAC7BC,GAMI,OAJU,IAAIX,EAAW,CACvBY,SAAUF,EAAKG,EAAEC,GACjBC,WAAY,SAECC,MAAM,GACzB,WACM,IAAIC,EACVC,EAIM,OAHAA,EAAWpB,EAAKI,KAAKiB,YAAYR,GAAKS,MAAMC,QAAQX,GACpDO,EAAOnB,EAAKI,KAAKiB,YAAYR,GAAKS,MAAME,OAAOJ,EACrD,GACapB,EAAKI,KAAKiB,YAAoB,YAARR,EAAoB,WAAa,WAAWS,MAAMjC,KAAK8B,EAAK,OAG7FnB,EAAKyB,SAAW,SAASb,EAC3BC,GAMI,OAJU,IAAIX,EAAW,CACvBY,SAAUF,EAAKG,EAAEC,GACjBC,WAAY,SAECC,MAAM,GACzB,WACM,IACNE,EAEM,OADAA,EAAWpB,EAAKI,KAAKiB,YAAYR,GAAKS,MAAMC,QAAQX,GACtCZ,EAAKI,KAAKiB,YAAYR,GAAKS,MAAME,OAAOJ,EAC5D,MAGEpB,EAAK0B,SAAW,SAASd,GAIvB,OAHKA,EAAKe,UACRf,EAAKe,SAAU,GAEVxB,EAAOyB,KAAK,QAAUhB,EAAKG,EAAEC,KAEtChB,EAAK6B,YAAc,SAASjB,GAM1B,OAJU,IAAIV,EAAW,CACvBY,SAAUF,EAAKG,EAAEC,GACjBC,WAAY,gBAECC,MAAM,GACzB,WACM,OAAOjB,EAASQ,IAAI,GAC1B,SAASL,GACD,OAAOJ,EAAKI,KAAOA,OAIzBJ,EAAK8B,QAAU,SAASlB,GAOtB,OALU,IAAIV,EAAW,CACvBY,SAAUF,EAAKG,EAAEC,GACjBC,WAAY,WACZX,QAASN,EAAKM,UAEDY,MAAM,GACzB,WACM,OAAOjB,EAASQ,IAAI,CAClBC,KAAQP,EAAOI,SAASC,UAEhC,SAASJ,GACD,OAAOJ,EAAKI,KAAOA,OAIzBJ,EAAK+B,UAAY,SAASnB,GACxB,OAAOZ,EAAKK,UAAYO,EAAKoB,MAExBhC,EAAKiC,UAAY,WAMtB,OAJU,IAAI/B,EAAW,CACvBe,WAAY,WACZX,QAASN,EAAKM,UAEDY,MAAM,GACzB,WACM,OAAOjB,EAASQ,IAAI,CAClBC,KAAQP,EAAOI,SAASC,UAEhC,SAASJ,GACD,OAAOJ,EAAKI,KAAOA","sourcesContent":["\r\n# Append to array, return array\r\nArray.prototype.append = (el) ->\r\n  this.push el if this.push?\r\n  this\r\n\r\nangular.module('app', [\r\n  'ngRoute', \r\n  'ngResource',\r\n  'checklist-model'\r\n])\r\n  .factory('APIGames', ['$resource', ($resource) -> $resource 'games/get'])\r\n  .factory('APIControl', ['$resource', ($resource) -> $resource 'games/control', {}])\r\n\r\n  .run([\r\n    '$rootScope', '$route'\r\n  ].append (root, $route) ->\r\n    console.log \"<-run->\"\r\n\r\n  )\r\n\r\n  .controller('AppCtrl', ['$scope', 'APIGames', 'APIControl', '$window', (self, APIGames, APIControl, window) ->\r\n\r\n    self.data = {}\r\n    self.modalTags = {}\r\n    self.tags_id = []\r\n    console.log location.pathname\r\n    APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n      self.data = data\r\n\r\n    self.toggleSave = (game, key) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'save'\r\n      control.$save {}, () ->\r\n        position  = self.data.collections[key].games.indexOf(game)\r\n        item      = self.data.collections[key].games.splice(position, 1)      \r\n       \r\n        self.data.collections[if key == 'regular' then 'favorite' else 'regular'].games.push(item[0])\r\n    \r\n    self.hideGame = (game, key) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hide'\r\n      control.$save {}, () ->\r\n        position  = self.data.collections[key].games.indexOf(game)\r\n        item      = self.data.collections[key].games.splice(position, 1)\r\n\r\n    self.showGame = (game) ->\r\n      if !game.is_view\r\n        game.is_view = true\r\n      window.open '/win/' + game.g.id\r\n\r\n    self.hideCompany = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideCompany'\r\n      control.$save {}, () ->\r\n        APIGames.get {}, (data) ->\r\n          self.data = data\r\n\r\n    self.hideTag = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->\r\n        APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n          self.data = data\r\n\r\n    self.openModal = (game) ->\r\n      self.modalTags = game.tags\r\n\r\n    self.sendModal = () ->\r\n      control = new APIControl\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->\r\n        APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n          self.data = data\r\n  ])\r\n"],"file":"app-min.js"}