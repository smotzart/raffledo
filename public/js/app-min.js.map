{"version":3,"sources":["app.coffee"],"names":["Array","prototype","append","el","this","push","angular","module","factory","$resource","value","tag","run","root","$route","controller","self","APIGames","APIControl","window","$timeout","$watch","getData","initValue","initName","data","modalTags","tags_id","showTagSuccess","params","get","toggleTagView","id","actionType","tag_type","tag_id","$save","console","log","entry_hide","toggleSave","game","actionId","g","item","position","save_id","collections","games","indexOf","splice","hideGame","key","showGame","is_view","open","hideCompany","hideTag","path","location","pathname","openModal","tags","sendModal","tag_hide"],"mappings":"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","sourcesContent":["\r\n# Append to array, return array\r\nArray.prototype.append = (el) ->\r\n  this.push el if this.push?\r\n  this\r\n\r\nangular.module('app', [\r\n  'ngRoute', \r\n  'ngResource',\r\n  'ngAnimate',\r\n  'ngSanitize',\r\n  'checklist-model'\r\n])\r\n  .factory('APIGames', ['$resource', ($resource) -> $resource 'games/get/:value/:tag', {value: '@value', tag: '@tag'}])\r\n  .factory('APIControl', ['$resource', ($resource) -> $resource 'games/control', {}])\r\n\r\n  .run([\r\n    '$rootScope', '$route'\r\n  ].append (root, $route) ->\r\n\r\n  )\r\n\r\n  .controller('AppCtrl', ['$scope', 'APIGames', 'APIControl', '$window', '$timeout', (self, APIGames, APIControl, window, $timeout) ->\r\n\r\n    self.$watch 'initValue', () ->\r\n      self.getData(self.initValue, self.initName)\r\n\r\n    self.data = {}\r\n    self.modalTags = {}\r\n    self.tags_id = []\r\n    self.showTagSuccess = false\r\n\r\n    self.getData = (value, tag) ->\r\n      params = if value && tag then {value: value, tag: tag} else {}\r\n      APIGames.get params, (data) ->\r\n        self.data = data\r\n\r\n    self.toggleTagView = (id, tag) ->\r\n      control = new APIControl \r\n        actionType: 'toggleTagById'\r\n        tag_type: tag\r\n        tag_id: id\r\n      control.$save {}, () ->\r\n        if tag == self.initName\r\n          self.data.entry_hide = !self.data.entry_hide\r\n          unless self.data.entry_hide\r\n            self.showTagSuccess  = true\r\n            $timeout () ->\r\n              self.showTagSuccess = false\r\n            , 3000\r\n        else\r\n          console.log \"tt\"\r\n          self.getData()\r\n\r\n      , () ->\r\n        console.log 'not process'\r\n\r\n\r\n    self.toggleSave = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'save'\r\n      control.$save {}, () ->\r\n        game.save_id = true\r\n        unless self.initValue\r\n          position  = self.data.collections['regular'].games.indexOf(game)\r\n          item      = self.data.collections['regular'].games.splice(position, 1)      \r\n         \r\n          self.data.collections['favorite'].games.push(item[0])\r\n    \r\n    self.hideGame = (game, key) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hide'\r\n      control.$save {}, () ->\r\n        unless self.initValue\r\n          position  = self.data.collections[key].games.indexOf(game)\r\n          item      = self.data.collections[key].games.splice(position, 1)\r\n\r\n    self.showGame = (game) ->\r\n      if !game.is_view\r\n        game.is_view = true\r\n      window.open '/win/' + game.g.id\r\n\r\n    self.hideCompany = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideCompany'\r\n      control.$save {}, () ->        \r\n        unless self.initValue\r\n          APIGames.get {}, (data) ->\r\n            self.data = data\r\n\r\n    self.hideTag = (game) ->\r\n      control = new APIControl\r\n        actionId: game.g.id\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->        \r\n        unless self.initValue\r\n          APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n            self.data = data\r\n\r\n    self.openModal = (game) ->\r\n      self.modalTags = game.tags\r\n\r\n    self.sendModal = () ->\r\n      control = new APIControl\r\n        actionType: 'hideTags'\r\n        tags_id: self.tags_id\r\n      control.$save {}, () ->       \r\n        unless self.initValue\r\n          APIGames.get {\"path\": window.location.pathname}, (data) ->\r\n            self.data = data\r\n  ])\r\n\r\n  .controller('TagCtrl', ['$scope', 'APIGames', 'APIControl', '$window', (self, APIGames, APIControl, window) ->\r\n    self.$watch 'tag_hide', () ->\r\n      console.log self.tag_hide\r\n  ])"],"file":"app-min.js"}